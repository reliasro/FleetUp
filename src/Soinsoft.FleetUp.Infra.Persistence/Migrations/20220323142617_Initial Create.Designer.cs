// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Soinsoft.FleetUp.Infra.Persistence.Data;

#nullable disable

namespace Soinsoft.FleetUp.Infra.Persistence.Migrations
{
    [DbContext(typeof(FleetUpDbContext))]
    [Migration("20220323142617_Initial Create")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("Soinsoft.FleetUp.Domain.Entities.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CurrentValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Make")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<string>("VIN")
                        .HasColumnType("TEXT");

                    b.Property<string>("Year")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("Soinsoft.FleetUp.Domain.Entities.AssetInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CurrentValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AssetInfo");
                });

            modelBuilder.Entity("Soinsoft.FleetUp.Domain.Entities.Contractor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Contact")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Contractors");
                });

            modelBuilder.Entity("Soinsoft.FleetUp.Domain.Entities.Maintenance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("EstimatedCost")
                        .HasColumnType("TEXT");

                    b.Property<int>("MilesToExecuteTask")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TaskDetails")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("ToolsNeeded")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Maintenances");
                });

            modelBuilder.Entity("Soinsoft.FleetUp.Domain.Entities.MaintenanceInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("EstimatedCost")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaskDetails")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MaintenanceInfo");
                });

            modelBuilder.Entity("Soinsoft.FleetUp.Domain.Entities.WorkOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AssetInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ContractorID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfExecution")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaintenanceId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MaintenanceInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaskExecuted")
                        .HasColumnType("TEXT");

                    b.Property<int>("TimeSpent")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssetInfoId");

                    b.HasIndex("MaintenanceInfoId");

                    b.ToTable("WorkOrders");
                });

            modelBuilder.Entity("Soinsoft.FleetUp.Domain.Entities.WorkOrder", b =>
                {
                    b.HasOne("Soinsoft.FleetUp.Domain.Entities.AssetInfo", "AssetInfo")
                        .WithMany()
                        .HasForeignKey("AssetInfoId");

                    b.HasOne("Soinsoft.FleetUp.Domain.Entities.MaintenanceInfo", "MaintenanceInfo")
                        .WithMany()
                        .HasForeignKey("MaintenanceInfoId");

                    b.Navigation("AssetInfo");

                    b.Navigation("MaintenanceInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
